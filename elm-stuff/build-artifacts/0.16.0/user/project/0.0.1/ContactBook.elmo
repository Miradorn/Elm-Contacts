Elm.ContactBook = Elm.ContactBook || {};
Elm.ContactBook.make = function (_elm) {
   "use strict";
   _elm.ContactBook = _elm.ContactBook || {};
   if (_elm.ContactBook.values) return _elm.ContactBook.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Category = Elm.Category.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var countStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-size",_1: "20px"}
                                                   ,{ctor: "_Tuple2",_0: "font-family",_1: "monospace"}
                                                   ,{ctor: "_Tuple2",_0: "display",_1: "inline-block"}
                                                   ,{ctor: "_Tuple2",_0: "width",_1: "50px"}
                                                   ,{ctor: "_Tuple2",_0: "text-align",_1: "center"}]));
   var update = F2(function (action,model) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "Insert": var newCategory = {ctor: "_Tuple2",_0: model.nextID,_1: A2($Category.init,"new","category")};
           var newCategories = A2($Basics._op["++"],model.categories,_U.list([newCategory]));
           return _U.update(model,{categories: newCategories,nextID: model.nextID + 1});
         case "Remove": return _U.update(model,
           {categories: A2($List.filter,function (_p1) {    var _p2 = _p1;return !_U.eq(_p2._0,_p0._0);},model.categories)});
         default: var updateCat = function (_p3) {
              var _p4 = _p3;
              var _p6 = _p4._1;
              var _p5 = _p4._0;
              return _U.eq(_p5,_p0._0) ? {ctor: "_Tuple2",_0: _p5,_1: A2($Category.update,_p0._1,_p6)} : {ctor: "_Tuple2",_0: _p5,_1: _p6};
           };
           return _U.update(model,{categories: A2($List.map,updateCat,model.categories)});}
   });
   var Modify = F2(function (a,b) {    return {ctor: "Modify",_0: a,_1: b};});
   var Remove = function (a) {    return {ctor: "Remove",_0: a};};
   var viewCategory = F2(function (address,_p7) {
      var _p8 = _p7;
      var _p9 = _p8._0;
      var context = A2($Category.Context,A2($Signal.forwardTo,address,Modify(_p9)),A2($Signal.forwardTo,address,$Basics.always(Remove(_p9))));
      return A2($Category.view,context,_p8._1);
   });
   var Insert = {ctor: "Insert"};
   var view = F2(function (address,model) {
      var insert = A2($Html.button,_U.list([A2($Html$Events.onClick,address,Insert)]),_U.list([$Html.text("Add")]));
      var categories = A2($List.map,viewCategory(address),model.categories);
      return A2($Html.div,_U.list([]),_U.list([insert,A2($Html.ul,_U.list([]),categories)]));
   });
   var init = {categories: _U.list([]),nextID: 0};
   var Model = F2(function (a,b) {    return {categories: a,nextID: b};});
   return _elm.ContactBook.values = {_op: _op
                                    ,Model: Model
                                    ,init: init
                                    ,Insert: Insert
                                    ,Remove: Remove
                                    ,Modify: Modify
                                    ,update: update
                                    ,view: view
                                    ,viewCategory: viewCategory
                                    ,countStyle: countStyle};
};